{
  "name": "Basic-angular",
  "tagline": "Basic Angular project files, start point",
  "body": "# basic-angular\r\nBasic Angular project files, start point\r\n\r\nA set of files to start a project with angular and angular-material. Free to use.\r\n\r\nJust clone and `npm install`, then change the data in `package.json` and modify the `gulpfile.js`, there is a basic tasks to process sass and angular js files with a browser sync.\r\n\r\n## Install\r\nJust using `npm install` a serie of package will be installed:\r\n  - dependencies\r\n    - angular\r\n    - angular-animate\r\n    - angular-aria\r\n    - angular-material\r\n    - angular-messages\r\n    - angular-mocks\r\n    - angular-route\r\n    - angular-scroll\r\n  - devDependencies\r\n    - browser-sync\r\n    - gulp\r\n    - gulp-clean-css\r\n    - gulp-concat\r\n    - gulp-rename\r\n    - gulp-sass\r\n    - gulp-uglify\r\n    - gulp-watch\r\n    \r\n## Gulp\r\nThe project includes a `gulpfile.js` file with basic tasks.\r\n\r\n#### SASS\r\n`gulp sass` task will process the `app.scss` sass file located on `sass` directory. Ouput files `app.css app.min.css` will be placed on `assets/css`.\r\n\r\n#### Angular\r\n`gulp angular` will concatenate in a single file and uglify then in another file `angular.js angular.min.js`, all the anglar files and modules dependencies including `angular-material`; then the files will be placed on `assets/js` directory. The files to concatenate are:\r\n\r\n  - 'node_modules/angular/angular.js'\r\n  - 'node_modules/angular-route/angular-route.js'\r\n  - 'node_modules/angular-animate/angular-animate.js'\r\n  - 'node_modules/angular-aria/angular-aria.js'\r\n  - 'node_modules/angular-messages/angular-messages.js'\r\n  - 'node_modules/angular-material/angular-material.js'\r\n  - 'node_modules/angular-scroll/angular-scroll.js'\r\n  \r\n#### APP\r\n`gulp app` task concatenate in a single file with it uglify version `app.js app.min.js`, all the app files and will put in `assets/js`.\r\n\r\n#### Scripts\r\n`gulp scripts` take all JS files on `scripts` directory and concatenate it and create single files `scripts.js scripts.min.js` in `assets/js`.\r\n\r\n#### Watch\r\n`gulp watch` will watch, dah... All the files to trigger the gulp tasks when files change, or, will reload the browser when some js and html files change.\r\n\r\n#### Browser Sync\r\n`gulp serve` is the main task, this will call all the others tasks and create a local server to show your dev ambience. In this task you have to decide an uncomment the proxy option if it is needed.\r\n\r\n## SASS Directory\r\nIn `sass` directory are some initial scss files to start:\r\n  - `bourbon` are some amazing mixins collections to use with sass, see the [documentation here](http://bourbon.io/docs/).\r\n  - `helpers` here are some variables with brand colors `_brandcolors.scss`, helpers mixins `_mixins.scss` and the [Font Awesome](http://fontawesome.io/) SASS files.\r\n  - `app.scss` is the main SASS file where mixins and dependencies are called and is this file that the `gulp sass` task will process.\r\n\r\n## General Directory Structure (Ideal)\r\n  - app\r\n    - controllers\r\n    - services\r\n    - factory\r\n    - filters\r\n    - directives\r\n    - components\r\n    - theme (Used in `angular-material`)\r\n  - assets\r\n    - fonts\r\n  - sass\r\n    - bourbon\r\n    - helpers\r\n      - fontawesome\r\n  - scripts\r\n  - templates\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}